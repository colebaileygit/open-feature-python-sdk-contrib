============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.2.2, pluggy-1.5.0
rootdir: /home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd
configfile: pyproject.toml
plugins: bdd-7.2.0
collected 177 items

tests/e2e/test_in-process-file.py FFFFFFFFFFF.FFFFFFFFFFFFFFFFFFFFFFFFFF [ 21%]
FFFFFFFF..FF..FFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF..FF..FF [ 62%]
FF                                                                       [ 63%]
tests/e2e/test_rpc.py .................................................. [ 91%]
......                                                                   [ 94%]
tests/test_config.py ...                                                 [ 96%]
tests/test_flagd.py ......                                               [100%]

=================================== FAILURES ===================================
______________________ test_resolves_boolean_value[json] _______________________

fixturefunc = <function assert_boolean_value at 0x7db17046bf60>
request = <FixtureRequest for <Function test_resolves_boolean_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db170350260>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': True, 'key_and_default': ('boolean-flag', False)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:180: in assert_boolean_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'False != True'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: False != True

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-flag not present in flag store.
_______________________ test_resolves_string_value[json] _______________________

fixturefunc = <function assert_string at 0x7db17047d260>
request = <FixtureRequest for <Function test_resolves_string_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db170523200>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 'hi', 'key_and_default': ('string-flag', 'bye')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:317: in assert_string
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'bye' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'bye' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-flag not present in flag store.
______________________ test_resolves_integer_value[json] _______________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_resolves_integer_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db1703534d0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 10, 'key_and_default': ('integer-flag', 1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 10'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 10

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-flag not present in flag store.
_______________________ test_resolves_float_value[json] ________________________

fixturefunc = <function assert_float_value at 0x7db17047cae0>
request = <FixtureRequest for <Function test_resolves_float_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db170353a10>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.5, 'key_and_default': ('float-flag', 0.1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:256: in assert_float_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.5'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.5

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-flag not present in flag store.
_______________________ test_resolves_object_value[json] _______________________

fixturefunc = <function assert_object at 0x7db17047d8a0>
request = <FixtureRequest for <Function test_resolves_object_value[json]>>
kwargs = {'bool_field': 'showImages', 'bvalue': True, 'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7fe990>, 'details': None, ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:383: in assert_object
    assert_in(bool_field, evaluation_result)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:643: in assert_in
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'showImages' not in {}"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'showImages' not in {}

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'object-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 134, in resolve_object_details
    return self.resolver.resolve_object_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 81, in resolve_object_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key object-flag not present in flag store.
_____________________ test_resolves_boolean_details[json] ______________________

fixturefunc = <function assert_boolean_value_with_details at 0x7db17047c220>
request = <FixtureRequest for <Function test_resolves_boolean_details[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ff710>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': True, 'key_and_default': ('boolean-flag', False), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:199: in assert_boolean_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'False != True'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: False != True

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-flag not present in flag store.
______________________ test_resolves_string_details[json] ______________________

fixturefunc = <function assert_string_value_with_details at 0x7db17047e480>
request = <FixtureRequest for <Function test_resolves_string_details[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7fd520>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 'hi', 'key_and_default': ('string-flag', 'bye'), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:476: in assert_string_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'bye' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'bye' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-flag not present in flag store.
_____________________ test_resolves_integer_details[json] ______________________

fixturefunc = <function assert_integer_value_with_details at 0x7db17047c860>
request = <FixtureRequest for <Function test_resolves_integer_details[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db1703537d0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 10, 'key_and_default': ('integer-flag', 1), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:237: in assert_integer_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 10'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 10

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-flag not present in flag store.
______________________ test_resolves_float_details[json] _______________________

fixturefunc = <function assert_float_value_with_details at 0x7db17047ccc0>
request = <FixtureRequest for <Function test_resolves_float_details[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7fd9d0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.5, 'key_and_default': ('float-flag', 0.1), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:274: in assert_float_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.5'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.5

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-flag not present in flag store.
______________________ test_resolves_object_details[json] ______________________

fixturefunc = <function assert_object at 0x7db17047d8a0>
request = <FixtureRequest for <Function test_resolves_object_details[json]>>
kwargs = {'bool_field': 'showImages', 'bvalue': True, 'client': <openfeature.client.OpenFeatureClient object at 0x7db16f702ea0>, 'details': 'details', ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:374: in assert_object
    assert_in(bool_field, value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:643: in assert_in
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'showImages' not in {}"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'showImages' not in {}

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'object-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 134, in resolve_object_details
    return self.resolver.resolve_object_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 81, in resolve_object_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key object-flag not present in flag store.
_____________________ test_resolves_based_on_context[json] _____________________

fixturefunc = <function assert_string_response at 0x7db17047d440>
request = <FixtureRequest for <Function test_resolves_based_on_context[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f701220>, 'evaluation_context': EvaluationContext(ta...opełk', 'age': 29, 'customer': False}), 'expected_value': 'INTERNAL', 'key_and_default': ('context-aware', 'EXTERNAL')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:333: in assert_string_response
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'EXTERNAL' != 'INTERNAL'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'EXTERNAL' != 'INTERNAL'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'context-aware'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key context-aware not present in flag store.
____________________________ test_type_error[json] _____________________________

fixturefunc = <function assert_for_error at 0x7db17047e200>
request = <FixtureRequest for <Function test_type_error[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ff5f0>, 'error': 'TYPE_MISMATCH', 'evaluation_deta...ode=<ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'>, error_message='Flag with key wrong-flag not present in flag store.')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:456: in assert_for_error
    assert_equal(evaluation_details.error_code, ErrorCode[error])
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "<ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'> != <ErrorCode.TYPE_MISMATCH: 'TYPE_MISMATCH'>"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: <ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'> != <ErrorCode.TYPE_MISMATCH: 'TYPE_MISMATCH'>

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'wrong-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key wrong-flag not present in flag store.
__________ test_evaluator_reuse[json-"some-email-targeted-flag"-"hi"] __________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_evaluator_reuse[json-"some-email-targeted-flag"-"hi"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f702120>, 'evaluation_context': EvaluationContext(ta...email': 'ballmer@macrosoft.com'}), 'expected_value': 'hi', 'key_and_default': ('some-email-targeted-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'some-email-targeted-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key some-email-targeted-flag not present in flag store.
______ test_evaluator_reuse[json-"some-other-email-targeted-flag"-"yes"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_evaluator_reuse[json-"some-other-email-targeted-flag"-"yes"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7035f0>, 'evaluation_context': EvaluationContext(ta... 'ballmer@macrosoft.com'}), 'expected_value': 'yes', 'key_and_default': ('some-other-email-targeted-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'yes'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'yes'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'some-other-email-targeted-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key some-other-email-targeted-flag not present in flag store.
________________ test_fractional_operator[json-"jack"-"spades"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[json-"jack"-"spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7cbf20>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'jack'}}), 'expected_value': 'spades', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
________________ test_fractional_operator[json-"queen"-"clubs"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[json-"queen"-"clubs"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7028d0>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'queen'}}), 'expected_value': 'clubs', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'clubs'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'clubs'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_______________ test_fractional_operator[json-"ten"-"diamonds"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[json-"ten"-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7c8cb0>, 'evaluation_context': EvaluationContext(ta...ttributes={'user': {'name': 'ten'}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
________________ test_fractional_operator[json-"nine"-"hearts"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[json-"nine"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7caf00>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'nine'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_________________ test_fractional_operator[json-3-"diamonds"] __________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[json-3-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7cb7d0>, 'evaluation_context': EvaluationContext(ta...e, attributes={'user': {'name': 3}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_______ test_fractional_operator_with_shared_seed[json-"jack"-"hearts"] ________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[json-"jack"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7cad50>, 'evaluation_context': EvaluationContext(ta...ser': {'name': 'jack'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
_______ test_fractional_operator_with_shared_seed[json-"queen"-"spades"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[json-"queen"-"spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7005c0>, 'evaluation_context': EvaluationContext(ta...er': {'name': 'queen'}}), 'expected_value': 'spades', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
________ test_fractional_operator_with_shared_seed[json-"ten"-"hearts"] ________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[json-"ten"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f742c30>, 'evaluation_context': EvaluationContext(ta...user': {'name': 'ten'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
______ test_fractional_operator_with_shared_seed[json-"nine"-"diamonds"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[json-"nine"-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f741fa0>, 'evaluation_context': EvaluationContext(ta...r': {'name': 'nine'}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[json-"jack"-"ace-of-hearts"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[json-"jack"-"ace-of-hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7cbfe0>, 'evaluation_context': EvaluationContext(ta...'name': 'jack'}}), 'expected_value': 'ace-of-hearts', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[json-"queen"-"ace-of-spades"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[json-"queen"-"ace-of-spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f741010>, 'evaluation_context': EvaluationContext(ta...name': 'queen'}}), 'expected_value': 'ace-of-spades', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[json-"ten"-"ace-of-hearts"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[json-"ten"-"ace-of-hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f781fd0>, 'evaluation_context': EvaluationContext(ta...{'name': 'ten'}}), 'expected_value': 'ace-of-hearts', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[json-"nine"-"ace-of-diamonds"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[json-"nine"-"ace-of-diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f782ff0>, 'evaluation_context': EvaluationContext(ta...ame': 'nine'}}), 'expected_value': 'ace-of-diamonds', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_______________ test_substring_operators[json-"abcdef"-"prefix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[json-"abcdef"-"prefix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f741460>, 'evaluation_context': EvaluationContext(ta...ey=None, attributes={'id': 'abcdef'}), 'expected_value': 'prefix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'prefix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'prefix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
______________ test_substring_operators[json-"uvwxyz"-"postfix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[json-"uvwxyz"-"postfix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7811c0>, 'evaluation_context': EvaluationContext(ta...y=None, attributes={'id': 'uvwxyz'}), 'expected_value': 'postfix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'postfix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'postfix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
_______________ test_substring_operators[json-"abcxyz"-"prefix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[json-"abcxyz"-"prefix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f782a20>, 'evaluation_context': EvaluationContext(ta...ey=None, attributes={'id': 'abcxyz'}), 'expected_value': 'prefix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'prefix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'prefix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
________________ test_substring_operators[json-"lmnopq"-"none"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[json-"lmnopq"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7bbb30>, 'evaluation_context': EvaluationContext(ta..._key=None, attributes={'id': 'lmnopq'}), 'expected_value': 'none', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
___________________ test_substring_operators[json-3-"none"] ____________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[json-3-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f782b70>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'id': 3}), 'expected_value': 'none', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[json-"2.0.0"-"equal"] ____

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[json-"2.0.0"-"equal"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f740290>, 'evaluation_context': EvaluationContext(ta...{'version': '2.0.0'}), 'expected_value': 'equal', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'equal'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'equal'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
__ test_semantic_version_operator_numeric_comparison[json-"2.1.0"-"greater"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[json-"2.1.0"-"greater"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7b9970>, 'evaluation_context': EvaluationContext(ta...version': '2.1.0'}), 'expected_value': 'greater', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'greater'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'greater'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[json-"1.9.0"-"lesser"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[json-"1.9.0"-"lesser"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7bae70>, 'evaluation_context': EvaluationContext(ta...'version': '1.9.0'}), 'expected_value': 'lesser', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'lesser'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'lesser'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
_ test_semantic_version_operator_numeric_comparison[json-"2.0.0-alpha"-"lesser"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[json-"2.0.0-alpha"-"lesser"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ba750>, 'evaluation_context': EvaluationContext(ta...on': '2.0.0-alpha'}), 'expected_value': 'lesser', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'lesser'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'lesser'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[json-"2.0.0.0"-"none"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[json-"2.0.0.0"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7806b0>, 'evaluation_context': EvaluationContext(ta...'version': '2.0.0.0'}), 'expected_value': 'none', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[json-"3.0.1"-"minor"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[json-"3.0.1"-"minor"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77e810>, 'evaluation_context': EvaluationContext(ta...tributes={'version': '3.0.1'}), 'expected_value': 'minor', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'minor'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'minor'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[json-"3.1.0"-"major"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[json-"3.1.0"-"major"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77dcd0>, 'evaluation_context': EvaluationContext(ta...tributes={'version': '3.1.0'}), 'expected_value': 'major', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'major'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'major'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[json-"4.0.0"-"none"] ____

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[json-"4.0.0"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7b90a0>, 'evaluation_context': EvaluationContext(ta...ttributes={'version': '4.0.0'}), 'expected_value': 'none', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
_____________________ test_timebased_operations[json-1--1] _____________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_timebased_operations[json-1--1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77e300>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'time': 1}), 'expected_value': -1, 'key_and_default': ('timestamp-flag', 0)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0 != -1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0 != -1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'timestamp-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key timestamp-flag not present in flag store.
_________________ test_timebased_operations[json-4133980802-1] _________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_timebased_operations[json-4133980802-1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f7470>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'time': 4133980802}), 'expected_value': 1, 'key_and_default': ('timestamp-flag', 0)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0 != 1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0 != 1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'timestamp-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key timestamp-flag not present in flag store.
_ test_targeting_by_targeting_key[json-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_targeting_by_targeting_key[json-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f51f0>, 'evaluation_context': EvaluationContext(ta...478-a6d3-afaa4d51199e', attributes={}), 'expected_value': 'hit', 'key_and_default': ('targeting-key-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hit'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hit'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-key-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-key-flag not present in flag store.
_ test_targeting_by_targeting_key[json-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_targeting_by_targeting_key[json-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77fd70>, 'evaluation_context': EvaluationContext(ta...b6-bc8e-79d53c85134a', attributes={}), 'expected_value': 'miss', 'key_and_default': ('targeting-key-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'miss'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'miss'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-key-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-key-flag not present in flag store.
_______ test_errors_and_edge_cases[json-"targeting-null-variant-flag"-2] _______

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[json-"targeting-null-variant-flag"-2]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77ec90>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 2, 'key_and_default': ('targeting-null-variant-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 2'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 2

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-null-variant-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-null-variant-flag not present in flag store.
____ test_errors_and_edge_cases[json-"non-string-variant-targeting-flag"-2] ____

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[json-"non-string-variant-targeting-flag"-2]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7412e0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 2, 'key_and_default': ('non-string-variant-targeting-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 2'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 2

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'non-string-variant-targeting-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key non-string-variant-targeting-flag not present in flag store.
__________ test_errors_and_edge_cases[json-"empty-targeting-flag"-1] ___________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[json-"empty-targeting-flag"-1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7c9100>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 1, 'key_and_default': ('empty-targeting-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'empty-targeting-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key empty-targeting-flag not present in flag store.
____________________ test_resolves_boolean_zero_value[json] ____________________

fixturefunc = <function assert_boolean_value at 0x7db17046bf60>
request = <FixtureRequest for <Function test_resolves_boolean_zero_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7cb140>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': False, 'key_and_default': ('boolean-zero-flag', True)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:180: in assert_boolean_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'True != False'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: True != False

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-zero-flag not present in flag store.
____________________ test_resolves_string_zero_value[json] _____________________

fixturefunc = <function assert_empty_string at 0x7db17047d080>
request = <FixtureRequest for <Function test_resolves_string_zero_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77c380>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'key_and_default': ('string-zero-flag', 'hi')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:301: in assert_empty_string
    assert_string(client, key_and_default, evaluation_context, "")
tests/e2e/steps.py:317: in assert_string
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'hi' != ''"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'hi' != ''

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-zero-flag not present in flag store.
____________________ test_resolves_integer_zero_value[json] ____________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_resolves_integer_zero_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ff320>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0, 'key_and_default': ('integer-zero-flag', 1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 0'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 0

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-zero-flag not present in flag store.
_____________________ test_resolves_float_zero_value[json] _____________________

fixturefunc = <function assert_float_value at 0x7db17047cae0>
request = <FixtureRequest for <Function test_resolves_float_zero_value[json]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db170353e90>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.0, 'key_and_default': ('float-zero-flag', 0.1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:256: in assert_float_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.0'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.0

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-zero-flag not present in flag store.
______________________ test_resolves_boolean_value[yaml] _______________________

fixturefunc = <function assert_boolean_value at 0x7db17046bf60>
request = <FixtureRequest for <Function test_resolves_boolean_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7fc650>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': True, 'key_and_default': ('boolean-flag', False)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:180: in assert_boolean_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'False != True'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: False != True

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-flag not present in flag store.
_______________________ test_resolves_string_value[yaml] _______________________

fixturefunc = <function assert_string at 0x7db17047d260>
request = <FixtureRequest for <Function test_resolves_string_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f77f440>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 'hi', 'key_and_default': ('string-flag', 'bye')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:317: in assert_string
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'bye' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'bye' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-flag not present in flag store.
______________________ test_resolves_integer_value[yaml] _______________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_resolves_integer_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7b82f0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 10, 'key_and_default': ('integer-flag', 1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 10'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 10

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-flag not present in flag store.
_______________________ test_resolves_float_value[yaml] ________________________

fixturefunc = <function assert_float_value at 0x7db17047cae0>
request = <FixtureRequest for <Function test_resolves_float_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f781bb0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.5, 'key_and_default': ('float-flag', 0.1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:256: in assert_float_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.5'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.5

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-flag not present in flag store.
_______________________ test_resolves_object_value[yaml] _______________________

fixturefunc = <function assert_object at 0x7db17047d8a0>
request = <FixtureRequest for <Function test_resolves_object_value[yaml]>>
kwargs = {'bool_field': 'showImages', 'bvalue': True, 'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ba540>, 'details': None, ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:383: in assert_object
    assert_in(bool_field, evaluation_result)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:643: in assert_in
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'showImages' not in {}"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'showImages' not in {}

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'object-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 134, in resolve_object_details
    return self.resolver.resolve_object_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 81, in resolve_object_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key object-flag not present in flag store.
_____________________ test_resolves_boolean_details[yaml] ______________________

fixturefunc = <function assert_boolean_value_with_details at 0x7db17047c220>
request = <FixtureRequest for <Function test_resolves_boolean_details[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7bba10>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': True, 'key_and_default': ('boolean-flag', False), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:199: in assert_boolean_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'False != True'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: False != True

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-flag not present in flag store.
______________________ test_resolves_string_details[yaml] ______________________

fixturefunc = <function assert_string_value_with_details at 0x7db17047e480>
request = <FixtureRequest for <Function test_resolves_string_details[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f6720>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 'hi', 'key_and_default': ('string-flag', 'bye'), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:476: in assert_string_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'bye' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'bye' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-flag not present in flag store.
_____________________ test_resolves_integer_details[yaml] ______________________

fixturefunc = <function assert_integer_value_with_details at 0x7db17047c860>
request = <FixtureRequest for <Function test_resolves_integer_details[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f6a20>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 10, 'key_and_default': ('integer-flag', 1), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:237: in assert_integer_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 10'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 10

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-flag not present in flag store.
______________________ test_resolves_float_details[yaml] _______________________

fixturefunc = <function assert_float_value_with_details at 0x7db17047ccc0>
request = <FixtureRequest for <Function test_resolves_float_details[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f6480>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.5, 'key_and_default': ('float-flag', 0.1), ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:274: in assert_float_value_with_details
    assert_equal(evaluation_result.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.5'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.5

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-flag not present in flag store.
______________________ test_resolves_object_details[yaml] ______________________

fixturefunc = <function assert_object at 0x7db17047d8a0>
request = <FixtureRequest for <Function test_resolves_object_details[yaml]>>
kwargs = {'bool_field': 'showImages', 'bvalue': True, 'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ba060>, 'details': 'details', ...}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:374: in assert_object
    assert_in(bool_field, value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:643: in assert_in
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'showImages' not in {}"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'showImages' not in {}

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'object-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 134, in resolve_object_details
    return self.resolver.resolve_object_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 81, in resolve_object_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key object-flag not present in flag store.
_____________________ test_resolves_based_on_context[yaml] _____________________

fixturefunc = <function assert_string_response at 0x7db17047d440>
request = <FixtureRequest for <Function test_resolves_based_on_context[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f734c80>, 'evaluation_context': EvaluationContext(ta...opełk', 'age': 29, 'customer': False}), 'expected_value': 'INTERNAL', 'key_and_default': ('context-aware', 'EXTERNAL')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:333: in assert_string_response
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'EXTERNAL' != 'INTERNAL'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'EXTERNAL' != 'INTERNAL'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'context-aware'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key context-aware not present in flag store.
____________________________ test_type_error[yaml] _____________________________

fixturefunc = <function assert_for_error at 0x7db17047e200>
request = <FixtureRequest for <Function test_type_error[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f736720>, 'error': 'TYPE_MISMATCH', 'evaluation_deta...ode=<ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'>, error_message='Flag with key wrong-flag not present in flag store.')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:456: in assert_for_error
    assert_equal(evaluation_details.error_code, ErrorCode[error])
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "<ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'> != <ErrorCode.TYPE_MISMATCH: 'TYPE_MISMATCH'>"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: <ErrorCode.FLAG_NOT_FOUND: 'FLAG_NOT_FOUND'> != <ErrorCode.TYPE_MISMATCH: 'TYPE_MISMATCH'>

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'wrong-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key wrong-flag not present in flag store.
__________ test_evaluator_reuse[yaml-"some-email-targeted-flag"-"hi"] __________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_evaluator_reuse[yaml-"some-email-targeted-flag"-"hi"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f737950>, 'evaluation_context': EvaluationContext(ta...email': 'ballmer@macrosoft.com'}), 'expected_value': 'hi', 'key_and_default': ('some-email-targeted-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hi'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hi'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'some-email-targeted-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key some-email-targeted-flag not present in flag store.
______ test_evaluator_reuse[yaml-"some-other-email-targeted-flag"-"yes"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_evaluator_reuse[yaml-"some-other-email-targeted-flag"-"yes"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f7fb0>, 'evaluation_context': EvaluationContext(ta... 'ballmer@macrosoft.com'}), 'expected_value': 'yes', 'key_and_default': ('some-other-email-targeted-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'yes'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'yes'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'some-other-email-targeted-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key some-other-email-targeted-flag not present in flag store.
________________ test_fractional_operator[yaml-"jack"-"spades"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[yaml-"jack"-"spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b7e90>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'jack'}}), 'expected_value': 'spades', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
________________ test_fractional_operator[yaml-"queen"-"clubs"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[yaml-"queen"-"clubs"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b7c50>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'queen'}}), 'expected_value': 'clubs', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'clubs'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'clubs'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_______________ test_fractional_operator[yaml-"ten"-"diamonds"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[yaml-"ten"-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f736f90>, 'evaluation_context': EvaluationContext(ta...ttributes={'user': {'name': 'ten'}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
________________ test_fractional_operator[yaml-"nine"-"hearts"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[yaml-"nine"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b6e40>, 'evaluation_context': EvaluationContext(ta...attributes={'user': {'name': 'nine'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_________________ test_fractional_operator[yaml-3-"diamonds"] __________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator[yaml-3-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b4a40>, 'evaluation_context': EvaluationContext(ta...e, attributes={'user': {'name': 3}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag not present in flag store.
_______ test_fractional_operator_with_shared_seed[yaml-"jack"-"hearts"] ________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[yaml-"jack"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d0c20>, 'evaluation_context': EvaluationContext(ta...ser': {'name': 'jack'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
_______ test_fractional_operator_with_shared_seed[yaml-"queen"-"spades"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[yaml-"queen"-"spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b7a40>, 'evaluation_context': EvaluationContext(ta...er': {'name': 'queen'}}), 'expected_value': 'spades', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
________ test_fractional_operator_with_shared_seed[yaml-"ten"-"hearts"] ________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[yaml-"ten"-"hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d32f0>, 'evaluation_context': EvaluationContext(ta...user': {'name': 'ten'}}), 'expected_value': 'hearts', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
______ test_fractional_operator_with_shared_seed[yaml-"nine"-"diamonds"] _______

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_fractional_operator_with_shared_seed[yaml-"nine"-"diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d2db0>, 'evaluation_context': EvaluationContext(ta...r': {'name': 'nine'}}), 'expected_value': 'diamonds', 'key_and_default': ('fractional-flag-A-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-A-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-A-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[yaml-"jack"-"ace-of-hearts"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[yaml-"jack"-"ace-of-hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d3b90>, 'evaluation_context': EvaluationContext(ta...'name': 'jack'}}), 'expected_value': 'ace-of-hearts', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[yaml-"queen"-"ace-of-spades"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[yaml-"queen"-"ace-of-spades"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d34a0>, 'evaluation_context': EvaluationContext(ta...name': 'queen'}}), 'expected_value': 'ace-of-spades', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-spades'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-spades'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[yaml-"ten"-"ace-of-hearts"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[yaml-"ten"-"ace-of-hearts"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b5f70>, 'evaluation_context': EvaluationContext(ta...{'name': 'ten'}}), 'expected_value': 'ace-of-hearts', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-hearts'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-hearts'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_ test_second_fractional_operator_with_shared_seed[yaml-"nine"-"ace-of-diamonds"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_second_fractional_operator_with_shared_seed[yaml-"nine"-"ace-of-diamonds"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5ffbf0>, 'evaluation_context': EvaluationContext(ta...ame': 'nine'}}), 'expected_value': 'ace-of-diamonds', 'key_and_default': ('fractional-flag-B-shared-seed', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'ace-of-diamonds'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'ace-of-diamonds'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'fractional-flag-B-shared-seed'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key fractional-flag-B-shared-seed not present in flag store.
_______________ test_substring_operators[yaml-"abcdef"-"prefix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[yaml-"abcdef"-"prefix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5fe990>, 'evaluation_context': EvaluationContext(ta...ey=None, attributes={'id': 'abcdef'}), 'expected_value': 'prefix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'prefix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'prefix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
______________ test_substring_operators[yaml-"uvwxyz"-"postfix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[yaml-"uvwxyz"-"postfix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5fe270>, 'evaluation_context': EvaluationContext(ta...y=None, attributes={'id': 'uvwxyz'}), 'expected_value': 'postfix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'postfix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'postfix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
_______________ test_substring_operators[yaml-"abcxyz"-"prefix"] _______________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[yaml-"abcxyz"-"prefix"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d22d0>, 'evaluation_context': EvaluationContext(ta...ey=None, attributes={'id': 'abcxyz'}), 'expected_value': 'prefix', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'prefix'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'prefix'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
________________ test_substring_operators[yaml-"lmnopq"-"none"] ________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[yaml-"lmnopq"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f564b30>, 'evaluation_context': EvaluationContext(ta..._key=None, attributes={'id': 'lmnopq'}), 'expected_value': 'none', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
___________________ test_substring_operators[yaml-3-"none"] ____________________

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_substring_operators[yaml-3-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5659d0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'id': 3}), 'expected_value': 'none', 'key_and_default': ('starts-ends-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'starts-ends-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key starts-ends-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[yaml-"2.0.0"-"equal"] ____

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[yaml-"2.0.0"-"equal"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f566fc0>, 'evaluation_context': EvaluationContext(ta...{'version': '2.0.0'}), 'expected_value': 'equal', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'equal'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'equal'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
__ test_semantic_version_operator_numeric_comparison[yaml-"2.1.0"-"greater"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[yaml-"2.1.0"-"greater"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f564f80>, 'evaluation_context': EvaluationContext(ta...version': '2.1.0'}), 'expected_value': 'greater', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'greater'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'greater'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[yaml-"1.9.0"-"lesser"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[yaml-"1.9.0"-"lesser"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5ff3e0>, 'evaluation_context': EvaluationContext(ta...'version': '1.9.0'}), 'expected_value': 'lesser', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'lesser'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'lesser'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
_ test_semantic_version_operator_numeric_comparison[yaml-"2.0.0-alpha"-"lesser"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[yaml-"2.0.0-alpha"-"lesser"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f962c30>, 'evaluation_context': EvaluationContext(ta...on': '2.0.0-alpha'}), 'expected_value': 'lesser', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'lesser'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'lesser'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_numeric_comparison[yaml-"2.0.0.0"-"none"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_numeric_comparison[yaml-"2.0.0.0"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5fdbe0>, 'evaluation_context': EvaluationContext(ta...'version': '2.0.0.0'}), 'expected_value': 'none', 'key_and_default': ('equal-greater-lesser-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'equal-greater-lesser-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key equal-greater-lesser-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[yaml-"3.0.1"-"minor"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[yaml-"3.0.1"-"minor"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d0ad0>, 'evaluation_context': EvaluationContext(ta...tributes={'version': '3.0.1'}), 'expected_value': 'minor', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'minor'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'minor'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[yaml-"3.1.0"-"major"] ___

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[yaml-"3.1.0"-"major"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b73b0>, 'evaluation_context': EvaluationContext(ta...tributes={'version': '3.1.0'}), 'expected_value': 'major', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'major'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'major'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
___ test_semantic_version_operator_semantic_comparison[yaml-"4.0.0"-"none"] ____

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_semantic_version_operator_semantic_comparison[yaml-"4.0.0"-"none"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f736d80>, 'evaluation_context': EvaluationContext(ta...ttributes={'version': '4.0.0'}), 'expected_value': 'none', 'key_and_default': ('major-minor-version-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'none'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'none'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'major-minor-version-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key major-minor-version-flag not present in flag store.
_____________________ test_timebased_operations[yaml-1--1] _____________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_timebased_operations[yaml-1--1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db1709c2d50>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'time': 1}), 'expected_value': -1, 'key_and_default': ('timestamp-flag', 0)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0 != -1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0 != -1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'timestamp-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key timestamp-flag not present in flag store.
_________________ test_timebased_operations[yaml-4133980802-1] _________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_timebased_operations[yaml-4133980802-1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5d1160>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={'time': 4133980802}), 'expected_value': 1, 'key_and_default': ('timestamp-flag', 0)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0 != 1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0 != 1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'timestamp-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key timestamp-flag not present in flag store.
_ test_targeting_by_targeting_key[yaml-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_targeting_by_targeting_key[yaml-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7fd850>, 'evaluation_context': EvaluationContext(ta...478-a6d3-afaa4d51199e', attributes={}), 'expected_value': 'hit', 'key_and_default': ('targeting-key-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'hit'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'hit'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-key-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-key-flag not present in flag store.
_ test_targeting_by_targeting_key[yaml-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"] _

fixturefunc = <function assert_string_value at 0x7db17047cea0>
request = <FixtureRequest for <Function test_targeting_by_targeting_key[yaml-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7ca000>, 'evaluation_context': EvaluationContext(ta...b6-bc8e-79d53c85134a', attributes={}), 'expected_value': 'miss', 'key_and_default': ('targeting-key-flag', 'fallback')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:288: in assert_string_value
    assert_equal(evaluation_details.value, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'fallback' != 'miss'"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'fallback' != 'miss'

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-key-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-key-flag not present in flag store.
_______ test_errors_and_edge_cases[yaml-"targeting-null-variant-flag"-2] _______

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[yaml-"targeting-null-variant-flag"-2]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db1704b4140>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 2, 'key_and_default': ('targeting-null-variant-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 2'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 2

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'targeting-null-variant-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key targeting-null-variant-flag not present in flag store.
____ test_errors_and_edge_cases[yaml-"non-string-variant-targeting-flag"-2] ____

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[yaml-"non-string-variant-targeting-flag"-2]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f5b7380>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 2, 'key_and_default': ('non-string-variant-targeting-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 2'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 2

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'non-string-variant-targeting-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key non-string-variant-targeting-flag not present in flag store.
__________ test_errors_and_edge_cases[yaml-"empty-targeting-flag"-1] ___________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_errors_and_edge_cases[yaml-"empty-targeting-flag"-1]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f564140>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 1, 'key_and_default': ('empty-targeting-flag', 3)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '3 != 1'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 3 != 1

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'empty-targeting-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key empty-targeting-flag not present in flag store.
____________________ test_resolves_boolean_zero_value[yaml] ____________________

fixturefunc = <function assert_boolean_value at 0x7db17046bf60>
request = <FixtureRequest for <Function test_resolves_boolean_zero_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f5ca0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': False, 'key_and_default': ('boolean-zero-flag', True)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:180: in assert_boolean_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = 'True != False'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: True != False

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'boolean-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 94, in resolve_boolean_details
    return self.resolver.resolve_boolean_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 49, in resolve_boolean_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key boolean-zero-flag not present in flag store.
____________________ test_resolves_string_zero_value[yaml] _____________________

fixturefunc = <function assert_empty_string at 0x7db17047d080>
request = <FixtureRequest for <Function test_resolves_string_zero_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7f7b00>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'key_and_default': ('string-zero-flag', 'hi')}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:301: in assert_empty_string
    assert_string(client, key_and_default, evaluation_context, "")
tests/e2e/steps.py:317: in assert_string
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = "'hi' != ''"

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 'hi' != ''

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'string-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 104, in resolve_string_details
    return self.resolver.resolve_string_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 57, in resolve_string_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key string-zero-flag not present in flag store.
____________________ test_resolves_integer_zero_value[yaml] ____________________

fixturefunc = <function assert_integer_value at 0x7db17047c5e0>
request = <FixtureRequest for <Function test_resolves_integer_zero_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f7342f0>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0, 'key_and_default': ('integer-zero-flag', 1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:219: in assert_integer_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '1 != 0'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 1 != 0

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'integer-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 124, in resolve_integer_details
    return self.resolver.resolve_integer_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 73, in resolve_integer_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key integer-zero-flag not present in flag store.
_____________________ test_resolves_float_zero_value[yaml] _____________________

fixturefunc = <function assert_float_value at 0x7db17047cae0>
request = <FixtureRequest for <Function test_resolves_float_zero_value[yaml]>>
kwargs = {'client': <openfeature.client.OpenFeatureClient object at 0x7db16f960680>, 'evaluation_context': EvaluationContext(targeting_key=None, attributes={}), 'expected_value': 0.0, 'key_and_default': ('float-zero-flag', 0.1)}

    def call_fixture_func(
        fixturefunc: "_FixtureFunc[FixtureValue]", request: FixtureRequest, kwargs
    ) -> FixtureValue:
        if is_generator(fixturefunc):
            fixturefunc = cast(
                Callable[..., Generator[FixtureValue, None, None]], fixturefunc
            )
            generator = fixturefunc(**kwargs)
            try:
                fixture_result = next(generator)
            except StopIteration:
                raise ValueError(f"{request.fixturename} did not yield a value") from None
            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)
            request.addfinalizer(finalizer)
        else:
            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)
>           fixture_result = fixturefunc(**kwargs)

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/_pytest/fixtures.py:887:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/e2e/steps.py:256: in assert_float_value
    assert_equal(evaluation_result, expected_value)
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:179: in assert_equal
    fail(msg_fmt.format(msg=msg, first=first, second=second))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

msg = '0.1 != 0.0'

    def fail(msg=None):
        """Raise an AssertionError with the given message.

        >>> fail("my message")
        Traceback (most recent call last):
            ...
        AssertionError: my message

        """
>       raise AssertionError(msg or "assertion failure")
E       AssertionError: 0.1 != 0.0

../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/asserts/__init__.py:44: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    openfeature:client.py:364 Error ErrorCode.FLAG_NOT_FOUND while evaluating flag with key: 'float-zero-flag'
Traceback (most recent call last):
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 345, in evaluate_flag_details
    flag_evaluation = self._create_provider_evaluation(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/client.py", line 436, in _create_provider_evaluation
    resolution = get_details_callable(*args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/provider.py", line 114, in resolve_float_details
    return self.resolver.resolve_float_details(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 65, in resolve_float_details
    return self._resolve(key, default_value, evaluation_context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/src/openfeature/contrib/provider/flagd/resolvers/in_process.py", line 91, in _resolve
    raise FlagNotFoundError(f"Flag with key {key} not present in flag store.")
openfeature.exception.FlagNotFoundError: Flag with key float-zero-flag not present in flag store.
=============================== warnings summary ===============================
../../../../../.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/provider/provider.py:7
  /home/simonschrottner/.local/share/hatch/env/virtual/openfeature-provider-flagd/UIGBFyUg/openfeature-provider-flagd/lib/python3.12/site-packages/openfeature/provider/provider.py:7: DeprecationWarning: openfeature.provider.provider is deprecated, use openfeature.provider instead
    warnings.warn(

tests/e2e/test_in-process-file.py:44
  /home/simonschrottner/projects/openFeature/python-sdk-contrib/providers/openfeature-provider-flagd/tests/e2e/test_in-process-file.py:44: SyntaxWarning: "is" with 'str' literal. Did you mean "=="?
    if type is "json" : json.dump(result, outfile)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_value[json] - ...
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_value[json] - A...
FAILED tests/e2e/test_in-process-file.py::test_resolves_object_value[json] - ...
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_details[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_details[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_details[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_details[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_object_details[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_based_on_context[json]
FAILED tests/e2e/test_in-process-file.py::test_type_error[json] - AssertionEr...
FAILED tests/e2e/test_in-process-file.py::test_evaluator_reuse[json-"some-email-targeted-flag"-"hi"]
FAILED tests/e2e/test_in-process-file.py::test_evaluator_reuse[json-"some-other-email-targeted-flag"-"yes"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[json-"jack"-"spades"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[json-"queen"-"clubs"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[json-"ten"-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[json-"nine"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[json-3-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[json-"jack"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[json-"queen"-"spades"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[json-"ten"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[json-"nine"-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[json-"jack"-"ace-of-hearts"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[json-"queen"-"ace-of-spades"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[json-"ten"-"ace-of-hearts"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[json-"nine"-"ace-of-diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[json-"abcdef"-"prefix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[json-"uvwxyz"-"postfix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[json-"abcxyz"-"prefix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[json-"lmnopq"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[json-3-"none"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[json-"2.0.0"-"equal"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[json-"2.1.0"-"greater"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[json-"1.9.0"-"lesser"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[json-"2.0.0-alpha"-"lesser"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[json-"2.0.0.0"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[json-"3.0.1"-"minor"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[json-"3.1.0"-"major"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[json-"4.0.0"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_timebased_operations[json-1--1]
FAILED tests/e2e/test_in-process-file.py::test_timebased_operations[json-4133980802-1]
FAILED tests/e2e/test_in-process-file.py::test_targeting_by_targeting_key[json-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"]
FAILED tests/e2e/test_in-process-file.py::test_targeting_by_targeting_key[json-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[json-"targeting-null-variant-flag"-2]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[json-"non-string-variant-targeting-flag"-2]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[json-"empty-targeting-flag"-1]
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_zero_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_zero_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_zero_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_zero_value[json]
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_value[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_value[yaml] - ...
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_value[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_value[yaml] - A...
FAILED tests/e2e/test_in-process-file.py::test_resolves_object_value[yaml] - ...
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_details[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_details[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_details[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_details[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_object_details[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_based_on_context[yaml]
FAILED tests/e2e/test_in-process-file.py::test_type_error[yaml] - AssertionEr...
FAILED tests/e2e/test_in-process-file.py::test_evaluator_reuse[yaml-"some-email-targeted-flag"-"hi"]
FAILED tests/e2e/test_in-process-file.py::test_evaluator_reuse[yaml-"some-other-email-targeted-flag"-"yes"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[yaml-"jack"-"spades"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[yaml-"queen"-"clubs"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[yaml-"ten"-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[yaml-"nine"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator[yaml-3-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[yaml-"jack"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[yaml-"queen"-"spades"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[yaml-"ten"-"hearts"]
FAILED tests/e2e/test_in-process-file.py::test_fractional_operator_with_shared_seed[yaml-"nine"-"diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[yaml-"jack"-"ace-of-hearts"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[yaml-"queen"-"ace-of-spades"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[yaml-"ten"-"ace-of-hearts"]
FAILED tests/e2e/test_in-process-file.py::test_second_fractional_operator_with_shared_seed[yaml-"nine"-"ace-of-diamonds"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[yaml-"abcdef"-"prefix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[yaml-"uvwxyz"-"postfix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[yaml-"abcxyz"-"prefix"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[yaml-"lmnopq"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_substring_operators[yaml-3-"none"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[yaml-"2.0.0"-"equal"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[yaml-"2.1.0"-"greater"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[yaml-"1.9.0"-"lesser"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[yaml-"2.0.0-alpha"-"lesser"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_numeric_comparison[yaml-"2.0.0.0"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[yaml-"3.0.1"-"minor"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[yaml-"3.1.0"-"major"]
FAILED tests/e2e/test_in-process-file.py::test_semantic_version_operator_semantic_comparison[yaml-"4.0.0"-"none"]
FAILED tests/e2e/test_in-process-file.py::test_timebased_operations[yaml-1--1]
FAILED tests/e2e/test_in-process-file.py::test_timebased_operations[yaml-4133980802-1]
FAILED tests/e2e/test_in-process-file.py::test_targeting_by_targeting_key[yaml-"5c3d8535-f81a-4478-a6d3-afaa4d51199e"-"hit"-"TARGETING_MATCH"]
FAILED tests/e2e/test_in-process-file.py::test_targeting_by_targeting_key[yaml-"f20bd32d-703b-48b6-bc8e-79d53c85134a"-"miss"-"DEFAULT"]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[yaml-"targeting-null-variant-flag"-2]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[yaml-"non-string-variant-targeting-flag"-2]
FAILED tests/e2e/test_in-process-file.py::test_errors_and_edge_cases[yaml-"empty-targeting-flag"-1]
FAILED tests/e2e/test_in-process-file.py::test_resolves_boolean_zero_value[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_string_zero_value[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_integer_zero_value[yaml]
FAILED tests/e2e/test_in-process-file.py::test_resolves_float_zero_value[yaml]
================== 102 failed, 75 passed, 2 warnings in 9.27s ==================
